name: 'Lint and Test Charts'

on: 
  pull_request:
    branches:
      - main
    paths:
      - 'charts/**'
      - '!charts/**/*.md'
      - '!charts/**/*.png'
      - '!charts/**/*.gotmpl'
  workflow_dispatch: # Run workflow manually through the Github Actions Workflow page directly.

jobs:
  lint-test:
    runs-on: ubuntu-latest
    # Map a step output to a job output.
    outputs:
      list-changed: ${{ steps.list-changed.outputs.changed }}
      changed-chart: ${{ steps.list-changed.outputs.changed-chart }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.17.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Use single quotes or trailing 0s are lost.
          python-version: '3.13'

      - name: Set up chart-testing
        # Full version for action needs to be specified
        # because @2 points to previous release with
        # issue helm/chart-testing-action#135.
        uses: helm/chart-testing-action@v2.6.1
        with:
          version: '3.12.0'

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml --excluded-charts shared-library)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "changed-chart=${changed#charts/}" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --print-config --config ct.yaml

  kind-lint-test:
    if: needs.lint-test.outputs.list-changed == 'true'
    name: Deploy to Kubernetes ${{ matrix.kubernetesVersion }}
    needs: lint-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetesVersion: [v1.19.16, v1.25.16, v1.32.0]
        include:
        # Images: https://github.com/kubernetes-sigs/kind/releases
        - kubernetesVersion: v1.19.16
          kindImage: kindest/node:v1.19.16@sha256:a146f9819fece706b337d34125bbd5cb8ae4d25558427bf2fa3ee8ad231236f2
        - kubernetesVersion: v1.25.16
          kindImage: kindest/node:v1.25.16@sha256:6110314339b3b44d10da7d27881849a87e092124afab5956f2e10ecdb463b025
        - kubernetesVersion: v1.32.0
          kindImage: kindest/node:v1.32.0@sha256:c48c62eac5da28cdadcf560d1d8616cfa6783b58f0d94cf63ad1bf49600cb027
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check chart requirements
        id: check-req
        run: |
          echo "Checking chart version requirements before kind tests..."
          CHART_NAME=${{ needs.lint-test.outputs.changed-chart }}
          K8S_VERSION=${{ matrix.kubernetesVersion }}

          REQ_LINE=$(grep "^$CHART_NAME=" kind-requirements.txt || echo "")
          REQ_VERSION=$(echo "$REQ_LINE" | cut -d'=' -f2)
          echo "Chart minimum requirement: [$REQ_VERSION]"
          
          if [[ "$(echo -e "$REQ_VERSION\n$K8S_VERSION" | sort -V | tail -n 1)" == "$REQ_VERSION" ]]; then
            echo "::notice::Excluded K8s version $K8S_VERSION from kind tests for $CHART_NAME chart."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Minimum version requirements met, so proceeding with kind tests."
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Helm
        if: steps.check-req.outputs.skip != 'true'
        uses: azure/setup-helm@v4
        with:
          version: v3.17.0

      - name: Set up Python
        if: steps.check-req.outputs.skip != 'true'
        uses: actions/setup-python@v5
        with:
          # Use single quotes or trailing 0s are lost.
          python-version: '3.13'

      - name: Set up chart-testing
        if: steps.check-req.outputs.skip != 'true'
        # Full version for action needs to be specified
        # because @2 points to previous release with
        # issue helm/chart-testing-action#135.
        uses: helm/chart-testing-action@v2.6.1
        with:
          version: '3.12.0'

      - name: Create kind cluster ${{ matrix.kubernetesVersion }}
        if: steps.check-req.outputs.skip != 'true'
        uses: helm/kind-action@v1
        with:
          node_image: ${{ matrix.kindImage }}
          kubectl_version: ${{ matrix.kubernetesVersion }}
          cluster_name: chart-testing

      - name: Run chart-testing (install)
        if: steps.check-req.outputs.skip != 'true'
        run: ct install --config ct.yaml